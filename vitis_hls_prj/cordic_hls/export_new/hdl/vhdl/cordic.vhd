-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cordic is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of cordic is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "cordic_cordic,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.280750,HLS_SYN_LAT=13,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1030,HLS_SYN_LUT=3727,HLS_VERSION=2020_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv28_2D00000 : STD_LOGIC_VECTOR (27 downto 0) := "0010110100000000000000000000";
    constant ap_const_lv28_D300000 : STD_LOGIC_VECTOR (27 downto 0) := "1101001100000000000000000000";
    constant ap_const_lv28_35214E6 : STD_LOGIC_VECTOR (27 downto 0) := "0011010100100001010011100110";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv28_E56F58D : STD_LOGIC_VECTOR (27 downto 0) := "1110010101101111010110001101";
    constant ap_const_lv28_1C128E8 : STD_LOGIC_VECTOR (27 downto 0) := "0001110000010010100011101000";
    constant ap_const_lv28_F1F6B8C : STD_LOGIC_VECTOR (27 downto 0) := "1111000111110110101110001100";
    constant ap_const_lv28_E40022 : STD_LOGIC_VECTOR (27 downto 0) := "0000111001000000000000100010";
    constant ap_const_lv28_F8DFFEF : STD_LOGIC_VECTOR (27 downto 0) := "1111100011011111111111101111";
    constant ap_const_lv28_727154 : STD_LOGIC_VECTOR (27 downto 0) := "0000011100100111000101010100";
    constant ap_const_lv28_FC6C756 : STD_LOGIC_VECTOR (27 downto 0) := "1111110001101100011101010110";
    constant ap_const_lv28_3946F4 : STD_LOGIC_VECTOR (27 downto 0) := "0000001110010100011011110100";
    constant ap_const_lv28_FE35C86 : STD_LOGIC_VECTOR (27 downto 0) := "1111111000110101110010000110";
    constant ap_const_lv28_1CA544 : STD_LOGIC_VECTOR (27 downto 0) := "0000000111001010010101000100";
    constant ap_const_lv28_FF1AD5E : STD_LOGIC_VECTOR (27 downto 0) := "1111111100011010110101011110";
    constant ap_const_lv20_E92F7 : STD_LOGIC_VECTOR (19 downto 0) := "11101001001011110111";
    constant ap_const_lv20_4DBA8 : STD_LOGIC_VECTOR (19 downto 0) := "01001101101110101000";
    constant ap_const_lv21_1B2458 : STD_LOGIC_VECTOR (20 downto 0) := "110110010010001011000";
    constant ap_const_lv21_E92F6 : STD_LOGIC_VECTOR (20 downto 0) := "011101001001011110110";
    constant ap_const_lv20_4DBA7 : STD_LOGIC_VECTOR (19 downto 0) := "01001101101110100111";
    constant ap_const_lv20_E92F6 : STD_LOGIC_VECTOR (19 downto 0) := "11101001001011110110";
    constant ap_const_lv21_116D0A : STD_LOGIC_VECTOR (20 downto 0) := "100010110110100001010";
    constant ap_const_lv21_4DBA8 : STD_LOGIC_VECTOR (20 downto 0) := "001001101101110101000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv28_E52DA : STD_LOGIC_VECTOR (27 downto 0) := "0000000011100101001011011010";
    constant ap_const_lv28_FF8D693 : STD_LOGIC_VECTOR (27 downto 0) := "1111111110001101011010010011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv28_72976 : STD_LOGIC_VECTOR (27 downto 0) := "0000000001110010100101110110";
    constant ap_const_lv28_FFC6B45 : STD_LOGIC_VECTOR (27 downto 0) := "1111111111000110101101000101";
    constant ap_const_lv28_394BC : STD_LOGIC_VECTOR (27 downto 0) := "0000000000111001010010111100";
    constant ap_const_lv28_FFE35A2 : STD_LOGIC_VECTOR (27 downto 0) := "1111111111100011010110100010";
    constant ap_const_lv28_1CA5E : STD_LOGIC_VECTOR (27 downto 0) := "0000000000011100101001011110";
    constant ap_const_lv28_FFF1AD1 : STD_LOGIC_VECTOR (27 downto 0) := "1111111111110001101011010001";
    constant ap_const_lv28_E52E : STD_LOGIC_VECTOR (27 downto 0) := "0000000000001110010100101110";
    constant ap_const_lv28_FFF8D69 : STD_LOGIC_VECTOR (27 downto 0) := "1111111111111000110101101001";
    constant ap_const_lv28_7296 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000111001010010110";
    constant ap_const_lv28_FFFC6B5 : STD_LOGIC_VECTOR (27 downto 0) := "1111111111111100011010110101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv28_394C : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000011100101001100";
    constant ap_const_lv28_FFFE35A : STD_LOGIC_VECTOR (27 downto 0) := "1111111111111110001101011010";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal theta : STD_LOGIC_VECTOR (27 downto 0);
    signal sine : STD_LOGIC_VECTOR (27 downto 0);
    signal sine_ap_vld : STD_LOGIC;
    signal cosine : STD_LOGIC_VECTOR (27 downto 0);
    signal cosine_ap_vld : STD_LOGIC;
    signal tmp_fu_222_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1596 : STD_LOGIC_VECTOR (0 downto 0);
    signal theta_V_fu_238_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal theta_V_reg_1604 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_1_reg_1609 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1615 : STD_LOGIC_VECTOR (0 downto 0);
    signal theta_V_1_fu_272_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal theta_V_1_reg_1620 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_3_reg_1625 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1631 : STD_LOGIC_VECTOR (0 downto 0);
    signal theta_V_2_fu_306_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal theta_V_2_reg_1636 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_6_reg_1641 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_1647 : STD_LOGIC_VECTOR (0 downto 0);
    signal theta_V_3_fu_340_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal theta_V_3_reg_1652 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_9_reg_1657 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_1663 : STD_LOGIC_VECTOR (0 downto 0);
    signal theta_V_4_fu_374_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal theta_V_4_reg_1668 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_12_reg_1673 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_1679 : STD_LOGIC_VECTOR (0 downto 0);
    signal theta_V_5_fu_408_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal theta_V_5_reg_1684 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_15_reg_1689 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_1695 : STD_LOGIC_VECTOR (0 downto 0);
    signal theta_V_6_fu_442_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal theta_V_6_reg_1700 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_18_reg_1705 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_1711 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1496_5_fu_640_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln1496_5_reg_1716 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal current_sin_V_8_fu_647_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal current_sin_V_8_reg_1721 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_8_reg_1727 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1333_4_reg_1732 : STD_LOGIC_VECTOR (21 downto 0);
    signal theta_V_7_fu_686_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal theta_V_7_reg_1737 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_22_reg_1742 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_reg_1748 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1496_11_fu_809_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln1496_11_reg_1753 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal current_sin_V_14_fu_816_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal current_sin_V_14_reg_1759 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_14_reg_1765 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1333_8_reg_1770 : STD_LOGIC_VECTOR (19 downto 0);
    signal theta_V_8_fu_855_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal theta_V_8_reg_1775 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_26_reg_1780 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_reg_1786 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1496_17_fu_969_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln1496_17_reg_1791 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal current_sin_V_20_fu_976_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal current_sin_V_20_reg_1797 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_20_reg_1803 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_reg_1808 : STD_LOGIC_VECTOR (17 downto 0);
    signal theta_V_9_fu_1015_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal theta_V_9_reg_1813 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_30_reg_1818 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_1824 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1496_23_fu_1129_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln1496_23_reg_1829 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal current_sin_V_26_fu_1136_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal current_sin_V_26_reg_1835 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_28_reg_1841 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_29_reg_1846 : STD_LOGIC_VECTOR (15 downto 0);
    signal theta_V_10_fu_1175_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal theta_V_10_reg_1851 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_34_reg_1856 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_reg_1862 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1496_29_fu_1289_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln1496_29_reg_1867 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal theta_V_11_fu_1308_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal theta_V_11_reg_1873 : STD_LOGIC_VECTOR (27 downto 0);
    signal current_sin_V_32_fu_1314_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal current_sin_V_32_reg_1878 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_36_reg_1884 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_37_reg_1889 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_38_reg_1894 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_1900 : STD_LOGIC_VECTOR (0 downto 0);
    signal theta_V_12_fu_1402_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal theta_V_12_reg_1905 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal current_sin_V_35_fu_1408_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal current_sin_V_35_reg_1910 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_40_reg_1916 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_42_fu_1439_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_1921 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1496_35_fu_1459_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln1496_35_reg_1926 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_43_reg_1932 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_reg_1937 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal select_ln31_1_fu_230_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln1496_fu_267_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal select_ln1496_fu_260_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln1496_2_fu_301_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal select_ln1496_3_fu_294_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln1496_4_fu_335_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal select_ln1496_6_fu_328_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln1496_6_fu_369_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal select_ln1496_9_fu_362_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln1496_8_fu_403_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal select_ln1496_12_fu_396_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln1496_10_fu_437_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal select_ln1496_15_fu_430_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal select_ln703_1_fu_478_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln703_fu_464_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal select_ln1333_fu_492_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal current_sin_V_1_fu_485_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal current_sin_V_fu_471_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal current_sin_V_2_fu_503_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_fu_514_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln2_fu_528_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln1496_fu_499_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1496_fu_538_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln20_fu_510_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln1332_fu_524_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln703_fu_554_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln703_fu_542_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal select_ln1496_2_fu_566_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal current_sin_V_4_fu_560_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal current_sin_V_3_fu_548_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal current_sin_V_5_fu_577_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_5_fu_588_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln1333_2_fu_602_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln1496_1_fu_573_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1496_1_fu_612_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln20_1_fu_584_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1332_1_fu_598_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_3_fu_628_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln703_2_fu_616_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal current_sin_V_7_fu_634_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal current_sin_V_6_fu_622_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1496_12_fu_681_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal select_ln1496_18_fu_674_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1496_2_fu_708_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1496_3_fu_714_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln1332_fu_711_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_5_fu_728_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln703_4_fu_717_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln1496_8_fu_739_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal current_sin_V_10_fu_734_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal current_sin_V_9_fu_723_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_11_fu_757_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal current_sin_V_11_fu_750_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln1333_6_fu_771_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1496_4_fu_746_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1496_5_fu_781_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1332_1_fu_767_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_7_fu_797_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln703_6_fu_785_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal current_sin_V_13_fu_803_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal current_sin_V_12_fu_791_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1496_14_fu_850_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal select_ln1496_21_fu_843_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1496_6_fu_880_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1332_2_fu_877_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_9_fu_893_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln703_8_fu_883_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal current_sin_V_16_fu_898_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal current_sin_V_15_fu_888_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal select_ln1496_14_fu_903_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_17_fu_917_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal current_sin_V_17_fu_910_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln1333_s_fu_931_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1496_7_fu_941_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1333_fu_927_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_11_fu_957_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln703_10_fu_945_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal current_sin_V_19_fu_963_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal current_sin_V_18_fu_951_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1496_16_fu_1010_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal select_ln1496_24_fu_1003_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1496_8_fu_1040_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1333_1_fu_1037_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_13_fu_1053_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln703_12_fu_1043_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal current_sin_V_22_fu_1058_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal current_sin_V_21_fu_1048_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal select_ln1496_20_fu_1063_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_24_fu_1077_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal current_sin_V_23_fu_1070_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_25_fu_1091_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1496_9_fu_1101_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1332_3_fu_1087_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_15_fu_1117_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln703_14_fu_1105_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal current_sin_V_25_fu_1123_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal current_sin_V_24_fu_1111_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1496_18_fu_1170_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal select_ln1496_27_fu_1163_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1496_10_fu_1200_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1332_4_fu_1197_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_17_fu_1213_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln703_16_fu_1203_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal current_sin_V_28_fu_1218_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal current_sin_V_27_fu_1208_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal select_ln1496_26_fu_1223_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_32_fu_1237_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal current_sin_V_29_fu_1230_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_33_fu_1251_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1496_11_fu_1261_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1332_5_fu_1247_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_19_fu_1277_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln703_18_fu_1265_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1496_20_fu_1303_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal select_ln1496_30_fu_1296_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal current_sin_V_31_fu_1283_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal current_sin_V_30_fu_1271_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1496_12_fu_1360_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1332_6_fu_1357_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_21_fu_1373_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln703_20_fu_1363_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1496_22_fu_1397_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal select_ln1496_33_fu_1390_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal current_sin_V_34_fu_1378_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal current_sin_V_33_fu_1368_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal select_ln1496_32_fu_1383_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_41_fu_1425_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1496_13_fu_1435_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln703_23_fu_1453_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln703_22_fu_1447_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1332_7_fu_1485_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln1496_24_fu_1505_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal select_ln1496_36_fu_1498_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal current_sin_V_37_fu_1493_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal current_sin_V_36_fu_1488_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal current_sin_V_38_fu_1516_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_45_fu_1526_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal theta_V_13_fu_1510_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln1496_14_fu_1536_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln1332_8_fu_1523_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_46_fu_1540_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln703_25_fu_1559_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln703_24_fu_1548_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln31_fu_1570_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal current_sin_V_40_fu_1564_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal current_sin_V_39_fu_1553_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal current_sin_V_41_fu_1583_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component cordic_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        theta : OUT STD_LOGIC_VECTOR (27 downto 0);
        sine : IN STD_LOGIC_VECTOR (27 downto 0);
        sine_ap_vld : IN STD_LOGIC;
        cosine : IN STD_LOGIC_VECTOR (27 downto 0);
        cosine_ap_vld : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    control_s_axi_U : component cordic_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        theta => theta,
        sine => sine,
        sine_ap_vld => sine_ap_vld,
        cosine => cosine,
        cosine_ap_vld => cosine_ap_vld,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                current_sin_V_14_reg_1759 <= current_sin_V_14_fu_816_p3;
                select_ln1496_11_reg_1753 <= select_ln1496_11_fu_809_p3;
                theta_V_8_reg_1775 <= theta_V_8_fu_855_p2;
                tmp_14_reg_1765 <= select_ln1496_11_fu_809_p3(23 downto 6);
                tmp_26_reg_1780 <= theta_V_8_fu_855_p2(27 downto 27);
                tmp_27_reg_1786 <= theta_V_8_fu_855_p2(27 downto 27);
                trunc_ln1333_8_reg_1770 <= current_sin_V_14_fu_816_p3(25 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                current_sin_V_20_reg_1797 <= current_sin_V_20_fu_976_p3;
                select_ln1496_17_reg_1791 <= select_ln1496_17_fu_969_p3;
                theta_V_9_reg_1813 <= theta_V_9_fu_1015_p2;
                tmp_20_reg_1803 <= select_ln1496_17_fu_969_p3(23 downto 8);
                tmp_21_reg_1808 <= current_sin_V_20_fu_976_p3(25 downto 8);
                tmp_30_reg_1818 <= theta_V_9_fu_1015_p2(27 downto 27);
                tmp_31_reg_1824 <= theta_V_9_fu_1015_p2(27 downto 27);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                current_sin_V_26_reg_1835 <= current_sin_V_26_fu_1136_p3;
                select_ln1496_23_reg_1829 <= select_ln1496_23_fu_1129_p3;
                theta_V_10_reg_1851 <= theta_V_10_fu_1175_p2;
                tmp_28_reg_1841 <= select_ln1496_23_fu_1129_p3(23 downto 10);
                tmp_29_reg_1846 <= current_sin_V_26_fu_1136_p3(25 downto 10);
                tmp_34_reg_1856 <= theta_V_10_fu_1175_p2(27 downto 27);
                tmp_35_reg_1862 <= theta_V_10_fu_1175_p2(27 downto 27);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                current_sin_V_32_reg_1878 <= current_sin_V_32_fu_1314_p3;
                select_ln1496_29_reg_1867 <= select_ln1496_29_fu_1289_p3;
                theta_V_11_reg_1873 <= theta_V_11_fu_1308_p2;
                tmp_36_reg_1884 <= select_ln1496_29_fu_1289_p3(23 downto 12);
                tmp_37_reg_1889 <= current_sin_V_32_fu_1314_p3(25 downto 12);
                tmp_38_reg_1894 <= theta_V_11_fu_1308_p2(27 downto 27);
                tmp_39_reg_1900 <= theta_V_11_fu_1308_p2(27 downto 27);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                current_sin_V_35_reg_1910 <= current_sin_V_35_fu_1408_p3;
                select_ln1496_35_reg_1926 <= select_ln1496_35_fu_1459_p3;
                theta_V_12_reg_1905 <= theta_V_12_fu_1402_p2;
                tmp_40_reg_1916 <= select_ln1496_32_fu_1383_p3(23 downto 13);
                tmp_42_reg_1921 <= theta_V_12_fu_1402_p2(27 downto 27);
                tmp_43_reg_1932 <= theta_V_12_fu_1402_p2(27 downto 27);
                tmp_44_reg_1937 <= select_ln1496_35_fu_1459_p3(23 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                current_sin_V_8_reg_1721 <= current_sin_V_8_fu_647_p3;
                select_ln1496_5_reg_1716 <= select_ln1496_5_fu_640_p3;
                theta_V_7_reg_1737 <= theta_V_7_fu_686_p2;
                tmp_22_reg_1742 <= theta_V_7_fu_686_p2(27 downto 27);
                tmp_23_reg_1748 <= theta_V_7_fu_686_p2(27 downto 27);
                tmp_8_reg_1727 <= select_ln1496_5_fu_640_p3(21 downto 4);
                trunc_ln1333_4_reg_1732 <= current_sin_V_8_fu_647_p3(25 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                theta_V_1_reg_1620 <= theta_V_1_fu_272_p2;
                tmp_3_reg_1625 <= theta_V_1_fu_272_p2(27 downto 27);
                tmp_4_reg_1631 <= theta_V_1_fu_272_p2(27 downto 27);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                theta_V_2_reg_1636 <= theta_V_2_fu_306_p2;
                tmp_6_reg_1641 <= theta_V_2_fu_306_p2(27 downto 27);
                tmp_7_reg_1647 <= theta_V_2_fu_306_p2(27 downto 27);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                theta_V_3_reg_1652 <= theta_V_3_fu_340_p2;
                tmp_10_reg_1663 <= theta_V_3_fu_340_p2(27 downto 27);
                tmp_9_reg_1657 <= theta_V_3_fu_340_p2(27 downto 27);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                theta_V_4_reg_1668 <= theta_V_4_fu_374_p2;
                tmp_12_reg_1673 <= theta_V_4_fu_374_p2(27 downto 27);
                tmp_13_reg_1679 <= theta_V_4_fu_374_p2(27 downto 27);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                theta_V_5_reg_1684 <= theta_V_5_fu_408_p2;
                tmp_15_reg_1689 <= theta_V_5_fu_408_p2(27 downto 27);
                tmp_16_reg_1695 <= theta_V_5_fu_408_p2(27 downto 27);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                theta_V_6_reg_1700 <= theta_V_6_fu_442_p2;
                tmp_18_reg_1705 <= theta_V_6_fu_442_p2(27 downto 27);
                tmp_19_reg_1711 <= theta_V_6_fu_442_p2(27 downto 27);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                theta_V_reg_1604 <= theta_V_fu_238_p2;
                tmp_1_reg_1609 <= theta_V_fu_238_p2(27 downto 27);
                tmp_2_reg_1615 <= theta_V_fu_238_p2(27 downto 27);
                tmp_reg_1596 <= theta(27 downto 27);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln1496_10_fu_437_p2 <= std_logic_vector(unsigned(theta_V_5_reg_1684) + unsigned(ap_const_lv28_FF1AD5E));
    add_ln1496_12_fu_681_p2 <= std_logic_vector(unsigned(theta_V_6_reg_1700) + unsigned(ap_const_lv28_FF8D693));
    add_ln1496_14_fu_850_p2 <= std_logic_vector(unsigned(theta_V_7_reg_1737) + unsigned(ap_const_lv28_FFC6B45));
    add_ln1496_16_fu_1010_p2 <= std_logic_vector(unsigned(theta_V_8_reg_1775) + unsigned(ap_const_lv28_FFE35A2));
    add_ln1496_18_fu_1170_p2 <= std_logic_vector(unsigned(theta_V_9_reg_1813) + unsigned(ap_const_lv28_FFF1AD1));
    add_ln1496_20_fu_1303_p2 <= std_logic_vector(unsigned(theta_V_10_reg_1851) + unsigned(ap_const_lv28_FFF8D69));
    add_ln1496_22_fu_1397_p2 <= std_logic_vector(unsigned(theta_V_11_reg_1873) + unsigned(ap_const_lv28_FFFC6B5));
    add_ln1496_24_fu_1505_p2 <= std_logic_vector(unsigned(theta_V_12_reg_1905) + unsigned(ap_const_lv28_FFFE35A));
    add_ln1496_2_fu_301_p2 <= std_logic_vector(unsigned(theta_V_1_reg_1620) + unsigned(ap_const_lv28_F1F6B8C));
    add_ln1496_4_fu_335_p2 <= std_logic_vector(unsigned(theta_V_2_reg_1636) + unsigned(ap_const_lv28_F8DFFEF));
    add_ln1496_6_fu_369_p2 <= std_logic_vector(unsigned(theta_V_3_reg_1652) + unsigned(ap_const_lv28_FC6C756));
    add_ln1496_8_fu_403_p2 <= std_logic_vector(unsigned(theta_V_4_reg_1668) + unsigned(ap_const_lv28_FE35C86));
    add_ln1496_fu_267_p2 <= std_logic_vector(unsigned(theta_V_reg_1604) + unsigned(ap_const_lv28_E56F58D));
    add_ln703_11_fu_957_p2 <= std_logic_vector(unsigned(select_ln1496_14_fu_903_p3) + unsigned(sext_ln1496_7_fu_941_p1));
    add_ln703_13_fu_1053_p2 <= std_logic_vector(unsigned(select_ln1496_17_reg_1791) + unsigned(sext_ln1496_8_fu_1040_p1));
    add_ln703_15_fu_1117_p2 <= std_logic_vector(unsigned(select_ln1496_20_fu_1063_p3) + unsigned(sext_ln1496_9_fu_1101_p1));
    add_ln703_17_fu_1213_p2 <= std_logic_vector(unsigned(select_ln1496_23_reg_1829) + unsigned(sext_ln1496_10_fu_1200_p1));
    add_ln703_19_fu_1277_p2 <= std_logic_vector(unsigned(select_ln1496_26_fu_1223_p3) + unsigned(sext_ln1496_11_fu_1261_p1));
    add_ln703_21_fu_1373_p2 <= std_logic_vector(unsigned(select_ln1496_29_reg_1867) + unsigned(sext_ln1496_12_fu_1360_p1));
    add_ln703_23_fu_1453_p2 <= std_logic_vector(unsigned(select_ln1496_32_fu_1383_p3) + unsigned(sext_ln1496_13_fu_1435_p1));
    add_ln703_25_fu_1559_p2 <= std_logic_vector(unsigned(select_ln1496_35_reg_1926) + unsigned(sext_ln1496_14_fu_1536_p1));
    add_ln703_3_fu_628_p2 <= std_logic_vector(unsigned(zext_ln1496_1_fu_573_p1) + unsigned(sext_ln1496_1_fu_612_p1));
    add_ln703_5_fu_728_p2 <= std_logic_vector(signed(sext_ln1496_2_fu_708_p1) + signed(sext_ln1496_3_fu_714_p1));
    add_ln703_7_fu_797_p2 <= std_logic_vector(signed(sext_ln1496_4_fu_746_p1) + signed(sext_ln1496_5_fu_781_p1));
    add_ln703_9_fu_893_p2 <= std_logic_vector(unsigned(select_ln1496_11_reg_1753) + unsigned(sext_ln1496_6_fu_880_p1));
    add_ln703_fu_554_p2 <= std_logic_vector(unsigned(zext_ln1496_fu_499_p1) + unsigned(sext_ln1496_fu_538_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

        cosine <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln31_fu_1570_p3),28));


    cosine_ap_vld_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            cosine_ap_vld <= ap_const_logic_1;
        else 
            cosine_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    current_sin_V_10_fu_734_p2 <= std_logic_vector(unsigned(current_sin_V_8_reg_1721) - unsigned(sext_ln1332_fu_711_p1));
    current_sin_V_11_fu_750_p3 <= 
        current_sin_V_10_fu_734_p2 when (tmp_9_reg_1657(0) = '1') else 
        current_sin_V_9_fu_723_p2;
    current_sin_V_12_fu_791_p2 <= std_logic_vector(unsigned(current_sin_V_11_fu_750_p3) + unsigned(sext_ln1332_1_fu_767_p1));
    current_sin_V_13_fu_803_p2 <= std_logic_vector(unsigned(current_sin_V_11_fu_750_p3) - unsigned(sext_ln1332_1_fu_767_p1));
    current_sin_V_14_fu_816_p3 <= 
        current_sin_V_13_fu_803_p2 when (tmp_12_reg_1673(0) = '1') else 
        current_sin_V_12_fu_791_p2;
    current_sin_V_15_fu_888_p2 <= std_logic_vector(unsigned(current_sin_V_14_reg_1759) + unsigned(sext_ln1332_2_fu_877_p1));
    current_sin_V_16_fu_898_p2 <= std_logic_vector(unsigned(current_sin_V_14_reg_1759) - unsigned(sext_ln1332_2_fu_877_p1));
    current_sin_V_17_fu_910_p3 <= 
        current_sin_V_16_fu_898_p2 when (tmp_15_reg_1689(0) = '1') else 
        current_sin_V_15_fu_888_p2;
    current_sin_V_18_fu_951_p2 <= std_logic_vector(unsigned(current_sin_V_17_fu_910_p3) + unsigned(sext_ln1333_fu_927_p1));
    current_sin_V_19_fu_963_p2 <= std_logic_vector(unsigned(current_sin_V_17_fu_910_p3) - unsigned(sext_ln1333_fu_927_p1));
    current_sin_V_1_fu_485_p3 <= 
        ap_const_lv21_116D0A when (tmp_reg_1596(0) = '1') else 
        ap_const_lv21_4DBA8;
    current_sin_V_20_fu_976_p3 <= 
        current_sin_V_19_fu_963_p2 when (tmp_18_reg_1705(0) = '1') else 
        current_sin_V_18_fu_951_p2;
    current_sin_V_21_fu_1048_p2 <= std_logic_vector(unsigned(current_sin_V_20_reg_1797) + unsigned(sext_ln1333_1_fu_1037_p1));
    current_sin_V_22_fu_1058_p2 <= std_logic_vector(unsigned(current_sin_V_20_reg_1797) - unsigned(sext_ln1333_1_fu_1037_p1));
    current_sin_V_23_fu_1070_p3 <= 
        current_sin_V_22_fu_1058_p2 when (tmp_22_reg_1742(0) = '1') else 
        current_sin_V_21_fu_1048_p2;
    current_sin_V_24_fu_1111_p2 <= std_logic_vector(unsigned(current_sin_V_23_fu_1070_p3) + unsigned(sext_ln1332_3_fu_1087_p1));
    current_sin_V_25_fu_1123_p2 <= std_logic_vector(unsigned(current_sin_V_23_fu_1070_p3) - unsigned(sext_ln1332_3_fu_1087_p1));
    current_sin_V_26_fu_1136_p3 <= 
        current_sin_V_25_fu_1123_p2 when (tmp_26_reg_1780(0) = '1') else 
        current_sin_V_24_fu_1111_p2;
    current_sin_V_27_fu_1208_p2 <= std_logic_vector(unsigned(current_sin_V_26_reg_1835) + unsigned(sext_ln1332_4_fu_1197_p1));
    current_sin_V_28_fu_1218_p2 <= std_logic_vector(unsigned(current_sin_V_26_reg_1835) - unsigned(sext_ln1332_4_fu_1197_p1));
    current_sin_V_29_fu_1230_p3 <= 
        current_sin_V_28_fu_1218_p2 when (tmp_30_reg_1818(0) = '1') else 
        current_sin_V_27_fu_1208_p2;
    current_sin_V_2_fu_503_p3 <= 
        current_sin_V_1_fu_485_p3 when (tmp_1_reg_1609(0) = '1') else 
        current_sin_V_fu_471_p3;
    current_sin_V_30_fu_1271_p2 <= std_logic_vector(unsigned(current_sin_V_29_fu_1230_p3) + unsigned(sext_ln1332_5_fu_1247_p1));
    current_sin_V_31_fu_1283_p2 <= std_logic_vector(unsigned(current_sin_V_29_fu_1230_p3) - unsigned(sext_ln1332_5_fu_1247_p1));
    current_sin_V_32_fu_1314_p3 <= 
        current_sin_V_31_fu_1283_p2 when (tmp_34_reg_1856(0) = '1') else 
        current_sin_V_30_fu_1271_p2;
    current_sin_V_33_fu_1368_p2 <= std_logic_vector(unsigned(current_sin_V_32_reg_1878) + unsigned(sext_ln1332_6_fu_1357_p1));
    current_sin_V_34_fu_1378_p2 <= std_logic_vector(unsigned(current_sin_V_32_reg_1878) - unsigned(sext_ln1332_6_fu_1357_p1));
    current_sin_V_35_fu_1408_p3 <= 
        current_sin_V_34_fu_1378_p2 when (tmp_38_reg_1894(0) = '1') else 
        current_sin_V_33_fu_1368_p2;
    current_sin_V_36_fu_1488_p2 <= std_logic_vector(unsigned(current_sin_V_35_reg_1910) + unsigned(sext_ln1332_7_fu_1485_p1));
    current_sin_V_37_fu_1493_p2 <= std_logic_vector(unsigned(current_sin_V_35_reg_1910) - unsigned(sext_ln1332_7_fu_1485_p1));
    current_sin_V_38_fu_1516_p3 <= 
        current_sin_V_37_fu_1493_p2 when (tmp_42_reg_1921(0) = '1') else 
        current_sin_V_36_fu_1488_p2;
    current_sin_V_39_fu_1553_p2 <= std_logic_vector(unsigned(current_sin_V_38_fu_1516_p3) + unsigned(sext_ln1332_8_fu_1523_p1));
    current_sin_V_3_fu_548_p2 <= std_logic_vector(signed(sext_ln20_fu_510_p1) + signed(zext_ln1332_fu_524_p1));
    current_sin_V_40_fu_1564_p2 <= std_logic_vector(unsigned(current_sin_V_38_fu_1516_p3) - unsigned(sext_ln1332_8_fu_1523_p1));
    current_sin_V_41_fu_1583_p3 <= 
        current_sin_V_40_fu_1564_p2 when (tmp_46_fu_1540_p3(0) = '1') else 
        current_sin_V_39_fu_1553_p2;
    current_sin_V_4_fu_560_p2 <= std_logic_vector(signed(sext_ln20_fu_510_p1) - signed(zext_ln1332_fu_524_p1));
    current_sin_V_5_fu_577_p3 <= 
        current_sin_V_4_fu_560_p2 when (tmp_3_reg_1625(0) = '1') else 
        current_sin_V_3_fu_548_p2;
    current_sin_V_6_fu_622_p2 <= std_logic_vector(signed(sext_ln20_1_fu_584_p1) + signed(zext_ln1332_1_fu_598_p1));
    current_sin_V_7_fu_634_p2 <= std_logic_vector(signed(sext_ln20_1_fu_584_p1) - signed(zext_ln1332_1_fu_598_p1));
    current_sin_V_8_fu_647_p3 <= 
        current_sin_V_7_fu_634_p2 when (tmp_6_reg_1641(0) = '1') else 
        current_sin_V_6_fu_622_p2;
    current_sin_V_9_fu_723_p2 <= std_logic_vector(unsigned(current_sin_V_8_reg_1721) + unsigned(sext_ln1332_fu_711_p1));
    current_sin_V_fu_471_p3 <= 
        ap_const_lv21_1B2458 when (tmp_reg_1596(0) = '1') else 
        ap_const_lv21_E92F6;
    r_V_fu_514_p4 <= select_ln1333_fu_492_p3(19 downto 2);
    select_ln1333_fu_492_p3 <= 
        select_ln703_1_fu_478_p3 when (tmp_1_reg_1609(0) = '1') else 
        select_ln703_fu_464_p3;
    select_ln1496_11_fu_809_p3 <= 
        add_ln703_7_fu_797_p2 when (tmp_12_reg_1673(0) = '1') else 
        sub_ln703_6_fu_785_p2;
    select_ln1496_12_fu_396_p3 <= 
        ap_const_lv28_3946F4 when (tmp_13_reg_1679(0) = '1') else 
        ap_const_lv28_0;
    select_ln1496_14_fu_903_p3 <= 
        add_ln703_9_fu_893_p2 when (tmp_15_reg_1689(0) = '1') else 
        sub_ln703_8_fu_883_p2;
    select_ln1496_15_fu_430_p3 <= 
        ap_const_lv28_1CA544 when (tmp_16_reg_1695(0) = '1') else 
        ap_const_lv28_0;
    select_ln1496_17_fu_969_p3 <= 
        add_ln703_11_fu_957_p2 when (tmp_18_reg_1705(0) = '1') else 
        sub_ln703_10_fu_945_p2;
    select_ln1496_18_fu_674_p3 <= 
        ap_const_lv28_E52DA when (tmp_19_reg_1711(0) = '1') else 
        ap_const_lv28_0;
    select_ln1496_20_fu_1063_p3 <= 
        add_ln703_13_fu_1053_p2 when (tmp_22_reg_1742(0) = '1') else 
        sub_ln703_12_fu_1043_p2;
    select_ln1496_21_fu_843_p3 <= 
        ap_const_lv28_72976 when (tmp_23_reg_1748(0) = '1') else 
        ap_const_lv28_0;
    select_ln1496_23_fu_1129_p3 <= 
        add_ln703_15_fu_1117_p2 when (tmp_26_reg_1780(0) = '1') else 
        sub_ln703_14_fu_1105_p2;
    select_ln1496_24_fu_1003_p3 <= 
        ap_const_lv28_394BC when (tmp_27_reg_1786(0) = '1') else 
        ap_const_lv28_0;
    select_ln1496_26_fu_1223_p3 <= 
        add_ln703_17_fu_1213_p2 when (tmp_30_reg_1818(0) = '1') else 
        sub_ln703_16_fu_1203_p2;
    select_ln1496_27_fu_1163_p3 <= 
        ap_const_lv28_1CA5E when (tmp_31_reg_1824(0) = '1') else 
        ap_const_lv28_0;
    select_ln1496_29_fu_1289_p3 <= 
        add_ln703_19_fu_1277_p2 when (tmp_34_reg_1856(0) = '1') else 
        sub_ln703_18_fu_1265_p2;
    select_ln1496_2_fu_566_p3 <= 
        add_ln703_fu_554_p2 when (tmp_3_reg_1625(0) = '1') else 
        sub_ln703_fu_542_p2;
    select_ln1496_30_fu_1296_p3 <= 
        ap_const_lv28_E52E when (tmp_35_reg_1862(0) = '1') else 
        ap_const_lv28_0;
    select_ln1496_32_fu_1383_p3 <= 
        add_ln703_21_fu_1373_p2 when (tmp_38_reg_1894(0) = '1') else 
        sub_ln703_20_fu_1363_p2;
    select_ln1496_33_fu_1390_p3 <= 
        ap_const_lv28_7296 when (tmp_39_reg_1900(0) = '1') else 
        ap_const_lv28_0;
    select_ln1496_35_fu_1459_p3 <= 
        add_ln703_23_fu_1453_p2 when (tmp_42_fu_1439_p3(0) = '1') else 
        sub_ln703_22_fu_1447_p2;
    select_ln1496_36_fu_1498_p3 <= 
        ap_const_lv28_394C when (tmp_43_reg_1932(0) = '1') else 
        ap_const_lv28_0;
    select_ln1496_3_fu_294_p3 <= 
        ap_const_lv28_1C128E8 when (tmp_4_reg_1631(0) = '1') else 
        ap_const_lv28_0;
    select_ln1496_5_fu_640_p3 <= 
        add_ln703_3_fu_628_p2 when (tmp_6_reg_1641(0) = '1') else 
        sub_ln703_2_fu_616_p2;
    select_ln1496_6_fu_328_p3 <= 
        ap_const_lv28_E40022 when (tmp_7_reg_1647(0) = '1') else 
        ap_const_lv28_0;
    select_ln1496_8_fu_739_p3 <= 
        add_ln703_5_fu_728_p2 when (tmp_9_reg_1657(0) = '1') else 
        sub_ln703_4_fu_717_p2;
    select_ln1496_9_fu_362_p3 <= 
        ap_const_lv28_727154 when (tmp_10_reg_1663(0) = '1') else 
        ap_const_lv28_0;
    select_ln1496_fu_260_p3 <= 
        ap_const_lv28_35214E6 when (tmp_2_reg_1615(0) = '1') else 
        ap_const_lv28_0;
    select_ln31_1_fu_230_p3 <= 
        ap_const_lv28_2D00000 when (tmp_fu_222_p3(0) = '1') else 
        ap_const_lv28_D300000;
    select_ln31_fu_1570_p3 <= 
        add_ln703_25_fu_1559_p2 when (tmp_46_fu_1540_p3(0) = '1') else 
        sub_ln703_24_fu_1548_p2;
    select_ln703_1_fu_478_p3 <= 
        ap_const_lv20_4DBA7 when (tmp_reg_1596(0) = '1') else 
        ap_const_lv20_E92F6;
    select_ln703_fu_464_p3 <= 
        ap_const_lv20_E92F7 when (tmp_reg_1596(0) = '1') else 
        ap_const_lv20_4DBA8;
        sext_ln1332_1_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_11_fu_757_p4),26));

        sext_ln1332_2_fu_877_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_14_reg_1765),26));

        sext_ln1332_3_fu_1087_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_24_fu_1077_p4),26));

        sext_ln1332_4_fu_1197_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_28_reg_1841),26));

        sext_ln1332_5_fu_1247_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_32_fu_1237_p4),26));

        sext_ln1332_6_fu_1357_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_36_reg_1884),26));

        sext_ln1332_7_fu_1485_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_40_reg_1916),26));

        sext_ln1332_8_fu_1523_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_44_reg_1937),26));

        sext_ln1332_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_reg_1727),26));

        sext_ln1333_1_fu_1037_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_20_reg_1803),26));

        sext_ln1333_fu_927_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_17_fu_917_p4),26));

        sext_ln1496_10_fu_1200_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_29_reg_1846),24));

        sext_ln1496_11_fu_1261_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_33_fu_1251_p4),24));

        sext_ln1496_12_fu_1360_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_37_reg_1889),24));

        sext_ln1496_13_fu_1435_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_41_fu_1425_p4),24));

        sext_ln1496_14_fu_1536_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_45_fu_1526_p4),24));

        sext_ln1496_1_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1333_2_fu_602_p4),22));

        sext_ln1496_2_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln1496_5_reg_1716),23));

        sext_ln1496_3_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1333_4_reg_1732),23));

        sext_ln1496_4_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln1496_8_fu_739_p3),24));

        sext_ln1496_5_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1333_6_fu_771_p4),24));

        sext_ln1496_6_fu_880_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1333_8_reg_1770),24));

        sext_ln1496_7_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1333_s_fu_931_p4),24));

        sext_ln1496_8_fu_1040_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_21_reg_1808),24));

        sext_ln1496_9_fu_1101_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_25_fu_1091_p4),24));

        sext_ln1496_fu_538_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_fu_528_p4),21));

        sext_ln20_1_fu_584_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(current_sin_V_5_fu_577_p3),26));

        sext_ln20_fu_510_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(current_sin_V_2_fu_503_p3),22));

        sine <= std_logic_vector(IEEE.numeric_std.resize(signed(current_sin_V_41_fu_1583_p3),28));


    sine_ap_vld_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            sine_ap_vld <= ap_const_logic_1;
        else 
            sine_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln703_10_fu_945_p2 <= std_logic_vector(unsigned(select_ln1496_14_fu_903_p3) - unsigned(sext_ln1496_7_fu_941_p1));
    sub_ln703_12_fu_1043_p2 <= std_logic_vector(unsigned(select_ln1496_17_reg_1791) - unsigned(sext_ln1496_8_fu_1040_p1));
    sub_ln703_14_fu_1105_p2 <= std_logic_vector(unsigned(select_ln1496_20_fu_1063_p3) - unsigned(sext_ln1496_9_fu_1101_p1));
    sub_ln703_16_fu_1203_p2 <= std_logic_vector(unsigned(select_ln1496_23_reg_1829) - unsigned(sext_ln1496_10_fu_1200_p1));
    sub_ln703_18_fu_1265_p2 <= std_logic_vector(unsigned(select_ln1496_26_fu_1223_p3) - unsigned(sext_ln1496_11_fu_1261_p1));
    sub_ln703_20_fu_1363_p2 <= std_logic_vector(unsigned(select_ln1496_29_reg_1867) - unsigned(sext_ln1496_12_fu_1360_p1));
    sub_ln703_22_fu_1447_p2 <= std_logic_vector(unsigned(select_ln1496_32_fu_1383_p3) - unsigned(sext_ln1496_13_fu_1435_p1));
    sub_ln703_24_fu_1548_p2 <= std_logic_vector(unsigned(select_ln1496_35_reg_1926) - unsigned(sext_ln1496_14_fu_1536_p1));
    sub_ln703_2_fu_616_p2 <= std_logic_vector(unsigned(zext_ln1496_1_fu_573_p1) - unsigned(sext_ln1496_1_fu_612_p1));
    sub_ln703_4_fu_717_p2 <= std_logic_vector(signed(sext_ln1496_2_fu_708_p1) - signed(sext_ln1496_3_fu_714_p1));
    sub_ln703_6_fu_785_p2 <= std_logic_vector(signed(sext_ln1496_4_fu_746_p1) - signed(sext_ln1496_5_fu_781_p1));
    sub_ln703_8_fu_883_p2 <= std_logic_vector(unsigned(select_ln1496_11_reg_1753) - unsigned(sext_ln1496_6_fu_880_p1));
    sub_ln703_fu_542_p2 <= std_logic_vector(unsigned(zext_ln1496_fu_499_p1) - unsigned(sext_ln1496_fu_538_p1));
    theta_V_10_fu_1175_p2 <= std_logic_vector(unsigned(add_ln1496_18_fu_1170_p2) + unsigned(select_ln1496_27_fu_1163_p3));
    theta_V_11_fu_1308_p2 <= std_logic_vector(unsigned(add_ln1496_20_fu_1303_p2) + unsigned(select_ln1496_30_fu_1296_p3));
    theta_V_12_fu_1402_p2 <= std_logic_vector(unsigned(add_ln1496_22_fu_1397_p2) + unsigned(select_ln1496_33_fu_1390_p3));
    theta_V_13_fu_1510_p2 <= std_logic_vector(unsigned(add_ln1496_24_fu_1505_p2) + unsigned(select_ln1496_36_fu_1498_p3));
    theta_V_1_fu_272_p2 <= std_logic_vector(unsigned(add_ln1496_fu_267_p2) + unsigned(select_ln1496_fu_260_p3));
    theta_V_2_fu_306_p2 <= std_logic_vector(unsigned(add_ln1496_2_fu_301_p2) + unsigned(select_ln1496_3_fu_294_p3));
    theta_V_3_fu_340_p2 <= std_logic_vector(unsigned(add_ln1496_4_fu_335_p2) + unsigned(select_ln1496_6_fu_328_p3));
    theta_V_4_fu_374_p2 <= std_logic_vector(unsigned(add_ln1496_6_fu_369_p2) + unsigned(select_ln1496_9_fu_362_p3));
    theta_V_5_fu_408_p2 <= std_logic_vector(unsigned(add_ln1496_8_fu_403_p2) + unsigned(select_ln1496_12_fu_396_p3));
    theta_V_6_fu_442_p2 <= std_logic_vector(unsigned(add_ln1496_10_fu_437_p2) + unsigned(select_ln1496_15_fu_430_p3));
    theta_V_7_fu_686_p2 <= std_logic_vector(unsigned(add_ln1496_12_fu_681_p2) + unsigned(select_ln1496_18_fu_674_p3));
    theta_V_8_fu_855_p2 <= std_logic_vector(unsigned(add_ln1496_14_fu_850_p2) + unsigned(select_ln1496_21_fu_843_p3));
    theta_V_9_fu_1015_p2 <= std_logic_vector(unsigned(add_ln1496_16_fu_1010_p2) + unsigned(select_ln1496_24_fu_1003_p3));
    theta_V_fu_238_p2 <= std_logic_vector(unsigned(select_ln31_1_fu_230_p3) + unsigned(theta));
    tmp_11_fu_757_p4 <= select_ln1496_8_fu_739_p3(22 downto 5);
    tmp_17_fu_917_p4 <= select_ln1496_14_fu_903_p3(23 downto 7);
    tmp_24_fu_1077_p4 <= select_ln1496_20_fu_1063_p3(23 downto 9);
    tmp_25_fu_1091_p4 <= current_sin_V_23_fu_1070_p3(25 downto 9);
    tmp_32_fu_1237_p4 <= select_ln1496_26_fu_1223_p3(23 downto 11);
    tmp_33_fu_1251_p4 <= current_sin_V_29_fu_1230_p3(25 downto 11);
    tmp_41_fu_1425_p4 <= current_sin_V_35_fu_1408_p3(25 downto 13);
    tmp_42_fu_1439_p3 <= theta_V_12_fu_1402_p2(27 downto 27);
    tmp_45_fu_1526_p4 <= current_sin_V_38_fu_1516_p3(25 downto 14);
    tmp_46_fu_1540_p3 <= theta_V_13_fu_1510_p2(27 downto 27);
    tmp_5_fu_588_p4 <= select_ln1496_2_fu_566_p3(20 downto 3);
    tmp_fu_222_p3 <= theta(27 downto 27);
    trunc_ln1333_2_fu_602_p4 <= current_sin_V_5_fu_577_p3(21 downto 3);
    trunc_ln1333_6_fu_771_p4 <= current_sin_V_11_fu_750_p3(25 downto 5);
    trunc_ln1333_s_fu_931_p4 <= current_sin_V_17_fu_910_p3(25 downto 7);
    trunc_ln2_fu_528_p4 <= current_sin_V_2_fu_503_p3(20 downto 2);
    zext_ln1332_1_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_588_p4),26));
    zext_ln1332_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_514_p4),22));
    zext_ln1496_1_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1496_2_fu_566_p3),22));
    zext_ln1496_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1333_fu_492_p3),21));
end behav;
